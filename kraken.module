<?php

/**
 * @file
 * Provides optimised images via http://kraken.io.
 */

/**
 * Implements hook_help().
 */
function kraken_help($path, $arg) {
  switch ($path) {
    // Main module help for the kraken module
    case 'admin/help#kraken':
      return '<p>' . t('Getting the highest quality images with the smallest file sizes can be difficult. <ahref="@krakenio">Kraken.io</a> provides a service to optimize your images and strikes a good balance between high image quality with small file sizes. This module submits the images users provide in their normal content adding and editing to Kraken.io and Kraken.io provides an optimized version which is stored locally. Configuring the kraken module is done on the <a href="@img_toolkit">image toolkit page</a>.', array('@img_toolkit' => url('admin/config/media/image-toolkit'), '@krakenio' => url('http://kraken.io'))) . '</p>';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function kraken_form_system_image_toolkit_settings_alter(&$form, &$form_state) {
  $form['kraken'] = array(
  '#type' => 'container',
  '#tree' => TRUE,
);
  if (!function_exists('libraries_get_libraries')) {
    $form['kraken']['library'] = array(
      '#type' => 'markup',
      '#markup' => t('Kraken io integration requires both:
        <ul><li>the <a href = "http://drupal.org/project/libraries">Libraries</a> module;</li>
        <li>the <a href="https://github.com/kraken-io/kraken-php">Kraken-PHP library</a>
        to be installed in your libraries folder as kraken-php (sites/all/libraries/kraken-php).</li></ul>'),
    );
  }
  else {

    $libraries = libraries_get_libraries();
    if (!in_array('kraken-php', array_keys($libraries))) {
      $form['kraken']['library'] = array(
        '#type' => 'markup',
        '#markup' => t('<strong>Note:</strong> Kraken io not detected. Kraken.io integration requires the <a href="https://github.com/kraken-io/kraken-php">Kraken-PHP library</a> to be installed in your libraries folder as kraken-php (sites/all/libraries/kraken-php).'),
      );
    }
    else {

      $form['kraken']['api_key'] = array(
        '#title' => t('API Key'),
        '#type' => 'textfield',
        '#default_value' => variable_get('kraken_api_key', ''),
      );

      $form['kraken']['api_secret'] = array(
        '#title' => t('API Secret'),
        '#type' => 'textfield',
        '#default_value' => variable_get('kraken_api_secret', ''),
      );
      $form['#submit'][] = 'kraken_image_toolkit_settings_submit';
    }
  }
}

/**
 * Form submit for system_image_toolkit_settings.
 */
function kraken_image_toolkit_settings_submit(&$form, &$form_state) {
  $values = $form_state['values'];
  if (!empty($values['kraken']['api_key'])) {
    variable_set('kraken_api_key', $values['kraken']['api_key']);
  }
  if (!empty($values['kraken']['api_secret'])) {
    variable_set('kraken_api_secret', $values['kraken']['api_secret']);
  }
}

/**
 * Implements hook_watchdog().
 */
function kraken_watchdog(array $log_entry) {
  global $base_url, $language;

  $severity_list = array(
    WATCHDOG_EMERGENCY => t('Emergency'),
    WATCHDOG_ALERT     => t('Alert'),
    WATCHDOG_CRITICAL  => t('Critical'),
    WATCHDOG_ERROR     => t('Error'),
    WATCHDOG_WARNING   => t('Warning'),
    WATCHDOG_NOTICE    => t('Notice'),
    WATCHDOG_INFO      => t('Info'),
    WATCHDOG_DEBUG     => t('Debug'),
  );

  $to = 'someone@example.com';
  $params = array();
  $params['subject'] = t('[@site_name] @severity_desc: Alert from your web site', array(
    '@site_name' => variable_get('site_name', 'Drupal'),
    '@severity_desc' => $severity_list[$log_entry['severity']],
  ));

  $params['message']  = "\nSite:         @base_url";
  $params['message'] .= "\nSeverity:     (@severity) @severity_desc";
  $params['message'] .= "\nTimestamp:    @timestamp";
  $params['message'] .= "\nType:         @type";
  $params['message'] .= "\nIP Address:   @ip";
  $params['message'] .= "\nRequest URI:  @request_uri";
  $params['message'] .= "\nReferrer URI: @referer_uri";
  $params['message'] .= "\nUser:         (@uid) @name";
  $params['message'] .= "\nLink:         @link";
  $params['message'] .= "\nMessage:      \n\n@message";

  $params['message'] = t($params['message'], array(
    '@base_url'      => $base_url,
    '@severity'      => $log_entry['severity'],
    '@severity_desc' => $severity_list[$log_entry['severity']],
    '@timestamp'     => format_date($log_entry['timestamp']),
    '@type'          => $log_entry['type'],
    '@ip'            => $log_entry['ip'],
    '@request_uri'   => $log_entry['request_uri'],
    '@referer_uri'   => $log_entry['referer'],
    '@uid'           => $log_entry['uid'],
    '@name'          => $log_entry['user']->name,
    '@link'          => strip_tags($log_entry['link']),
    '@message'       => strip_tags($log_entry['message']),
  ));

  drupal_mail('emaillog', 'entry', $to, $language, $params);
}
